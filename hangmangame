import random
def get_dictionary_words():
    """Attempt to load words from dictionary file, fall back to default list."""
    default_words = [
        'python', 'programming', 'computer', 'algorithm', 'database', 'network',
        'software', 'developer', 'coding', 'interface', 'function', 'variable'
    ]
    dictionary_words = []
    try:
        with open('/usr/share/dict/words', 'r') as file:
            dictionary_words = [word.strip().lower() for word in file]
            dictionary_words = [
                word for word in dictionary_words
                if word.isalpha() and 4 <= len(word) <= 10
            ]
        if dictionary_words:
            return dictionary_words
        else:
            print("Dictionary file is empty. Using default word list.")
            return default_words
    except FileNotFoundError:
        print("Dictionary file not found. Using default word list.")
        return default_words
    except Exception as e:
        print(f"Error loading dictionary: {e}. Using default word list.")
        return default_words

def get_hangman_display(wrong_guesses):
    """Return ASCII art for hangman based on number of wrong guesses."""
    stages = [
        """
           ------
           |    |
                |
                |
                |
                |
        ==========""",
        """
           ------
           |    |
           O    |
                |
                |
                |
        ==========""",
        """
           ------
           |    |
           O    |
           |    |
                |
                |
        ==========""",
        """
           ------
           |    |
           O    |
          /|    |
                |
                |
        ==========""",
        """
           ------
           |    |
           O    |
          /|\   |
                |
                |
        ==========""",
        """
           ------
           |    |
           O    |
          /|\   |
          /     |
                |
        ==========""",
        """
           ------
           |    |
           O    |
          /|\   |
          / \   |
                |
        =========="""
    ]
    return stages[wrong_guesses]

def get_hint_letters(secret_word):
    """Select 1-2 random letters from the secret word as a hint."""
    word_letters = set(secret_word)
    num_hints = 2 if len(secret_word) >= 7 else 1
    hint_letters = random.sample(list(word_letters), min(num_hints, len(word_letters)))
    return hint_letters

def hangman_game():
    words = get_dictionary_words()
    secret_word = random.choice(words).lower()
    word_letters = set(secret_word)  
    guessed_letters = set()  
    wrong_guesses = 0
    max_wrong_guesses = 6
    hint_letters = get_hint_letters(secret_word)
    guessed_letters.update(hint_letters)

    print("Welcome to Hangman!")
    print(f"Try to guess the word, one letter at a time.")
    print(f"The word has {len(secret_word)} letters: ", end="")
    for letter in secret_word:
        if letter in guessed_letters:
            print(f"{letter} ", end="")
        else:
            print("_ ", end="")
    print(f"\nHint: The word contains {', '.join(hint_letters)}")
    while wrong_guesses < max_wrong_guesses and word_letters != guessed_letters:
        print(get_hangman_display(wrong_guesses))
        print("Current word: ", end="")
        for letter in secret_word:
            if letter in guessed_letters:
                print(f"{letter} ", end="")
            else:
                print("_ ", end="")
        print(f"\nGuessed letters: {', '.join(sorted(guessed_letters))}")
        print(f"Wrong guesses remaining: {max_wrong_guesses - wrong_guesses}")
        try:
            guess = input("Guess a letter: ").lower()
            if len(guess) != 1 or not guess.isalpha():
                print("Please enter a single letter.")
                continue
            if guess in guessed_letters:
                print("You already guessed that letter!")
                continue
            guessed_letters.add(guess)
            if guess in word_letters:
                print(f"Good guess! '{guess}' is in the word.")
                if word_letters == guessed_letters:
                    print(f"Congratulations! You guessed the word: {secret_word}")
                    return  
            else:
                wrong_guesses += 1
                print(f"Sorry, '{guess}' is not in the word.")
        except KeyboardInterrupt:
            print("\nGame interrupted. Thanks for playing!")
            return
    if wrong_guesses >= max_wrong_guesses:
        print(get_hangman_display(wrong_guesses))
        print(f"Game Over! The word was: {secret_word}")
while True:
    hangman_game()
    play_again = input("Would you like to play again? (yes/no): ").lower()
    if play_again != 'yes':
        print("Thanks for playing Hangman!")
        break
